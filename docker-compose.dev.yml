version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: post-meeting-postgres
    environment:
      POSTGRES_DB: post_meeting_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Session Storage and Caching
  redis:
    image: redis:7-alpine
    container_name: post-meeting-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Mailhog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: post-meeting-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /maildir
    volumes:
      - mailhog_data:/maildir

  # MinIO for S3-compatible Object Storage (for file uploads)
  minio:
    image: minio/minio:latest
    container_name: post-meeting-minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Ngrok for Local HTTPS Tunneling (for OAuth callbacks)
  ngrok:
    image: ngrok/ngrok:latest
    container_name: post-meeting-ngrok
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN:-}
    command: 
      - "tunnel"
      - "--label"
      - "edge=edghts_2NiHq7HgzD8z7URXZ5Lz"
      - "http://host.docker.internal:3000"
    ports:
      - "4040:4040"  # Ngrok web interface
    profiles:
      - "tunnel"
    depends_on:
      - postgres
      - redis

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mailhog_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: post-meeting-network
