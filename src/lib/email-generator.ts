import type { ClientMeeting, ContentTone, FollowUpEmail } from '@/types/master-interfaces';

export async function generateFollowUpEmail(
  meeting: ClientMeeting,
  tone: ContentTone = 'professional'
): Promise<FollowUpEmail> {
  // For demo purposes, return a mock follow-up email
  // In production, this would call OpenAI API with meeting transcript

  const clientName = 'Valued Client'; // Simplified for demo
  const meetingDate = new Date(meeting.startTime).toLocaleDateString();

  const emailTemplates: Record<ContentTone, { subject: string; content: string }> = {
    professional: {
      subject: `Follow-up: ${meeting.title} - ${meetingDate}`,
      content: `Dear ${clientName},

I hope this email finds you well. I wanted to follow up on our meeting today and provide you with a summary of our discussion.

## Meeting Summary
We discussed your financial goals and investment strategy. I provided recommendations based on your risk tolerance and timeline.

## Next Steps
- Review the investment proposal I sent
- Consider the portfolio adjustments we discussed
- Schedule our next quarterly review

## Key Points Discussed
- Risk assessment and tolerance
- Investment timeline and goals
- Portfolio diversification strategy
- Market outlook and opportunities

I'm confident that the strategies we discussed will help you achieve your financial objectives. Please don't hesitate to reach out if you have any questions or need clarification on any points.

I look forward to our continued partnership and will be in touch soon with additional resources.

Best regards,
Financial Advisor

---
This email was generated by Post-Meeting Social AI
Generated on: ${new Date().toLocaleString()}`,
    },
    casual: {
      subject: `Quick follow-up on our ${meeting.title} chat`,
      content: `Hi ${clientName},

Hope you're doing well! Just wanted to touch base after our meeting today.

## What We Covered
We had a great discussion about your financial goals and how to best position your investments for success.

## Next Steps
- Take a look at the proposal I sent over
- Think about the portfolio changes we talked about
- Let me know if you want to schedule another chat

## Key Takeaways
- Your risk comfort level
- Investment timeline
- How to spread your investments
- Current market opportunities

I'm excited about the plan we put together and think it's going to work really well for you. Feel free to reach out anytime if you have questions!

Talk soon,
Financial Advisor

---
This email was generated by Post-Meeting Social AI
Generated on: ${new Date().toLocaleString()}`,
    },
    friendly: {
      subject: `Thanks for the great meeting today!`,
      content: `Hi ${clientName},

It was wonderful meeting with you today! I really enjoyed our conversation and learning more about your financial goals.

## Meeting Recap
We had an excellent discussion about your investment strategy and how to best support your financial future.

## What's Next
- I'll send over the detailed proposal we discussed
- Take some time to review the portfolio recommendations
- We can schedule a follow-up call whenever you're ready

## Highlights
- Understanding your risk preferences
- Setting realistic investment timelines
- Building a diversified portfolio
- Exploring current market opportunities

I'm really confident in the plan we developed together. It's going to be exciting to see how it unfolds for you!

Please don't hesitate to reach out if you have any questions or just want to chat.

Warm regards,
Financial Advisor

---
This email was generated by Post-Meeting Social AI
Generated on: ${new Date().toLocaleString()}`,
    },
  };

  const template = emailTemplates[tone] ?? emailTemplates.professional;

  return {
    subject: template.subject,
    content: template.content,
    tone,
    meetingId: meeting.id,
    generatedAt: new Date().toISOString(),
  } as FollowUpEmail;
}

export function validateEmailContent(email: FollowUpEmail): boolean {
  // Basic validation for email content
  if (!email.subject || !email.content) {
    return false;
  }

  if (email.subject.length < 10 || email.subject.length > 200) {
    return false;
  }

  if (email.content.length < 100 || email.content.length > 5000) {
    return false;
  }

  return true;
}

export function optimizeEmailForClient(
  email: FollowUpEmail,
  clientPreferences: {
    preferredTone?: ContentTone;
    maxLength?: number;
    includeCallToAction?: boolean;
  }
): FollowUpEmail {
  let optimizedContent = email.content;

  // Adjust length if needed
  if (clientPreferences.maxLength && optimizedContent.length > clientPreferences.maxLength) {
    optimizedContent =
      optimizedContent.substring(0, clientPreferences.maxLength - 100) +
      '...\n\n[Content truncated for length]';
  }

  // Add call-to-action if requested
  if (clientPreferences.includeCallToAction) {
    optimizedContent += '\n\nWould you like to schedule a follow-up call to discuss this further?';
  }

  return {
    ...email,
    content: optimizedContent,
  };
}
